{% set version = "4.8.1" %}
{% set build = 0 %}

# recipe-lint fails if mpi is undefined
{% set mpi = mpi or 'nompi' %}
{% if mpi == "nompi" %}
# prioritize nompi via build number
{% set build = build + 100 %}
{% endif %}

package:
  name: libnetcdf
  version: {{ version }}

source:
  url: https://github.com/Unidata/netcdf-c/archive/v{{ version }}.tar.gz
  sha256: bc018cc30d5da402622bf76462480664c6668b55eb16ba205a0dfb8647161dd0
  #git_url: https://github.com/Unidata/netcdf-c
  #git_rev: {{ "v" + version }}
  patches:
    - 0004-Prefer-getenv-TOPSRCDIR-over-STRINGIFY-TOPSRCDIR.patch
    - 0006-Fix-tests-for-Windows-VS2008-define-__func__-as-__FU.patch
    - 0008-Finish-the-missing-code-to-handle-VS-in-test_common..patch
    - 0009-topsrcdir.patch
    - strdup.patch

build:
  number: {{ build }}
  {% if mpi != "nompi" %}
  {% set mpi_prefix = "mpi_" + mpi %}
  {% else %}
  {% set mpi_prefix = "nompi" %}
  {% endif %}
  # add build string so packages can depend on
  # mpi or nompi variants
  # dependencies:
  # `PKG_NAME * mpi_mpich_*` for mpich
  # `PKG_NAME * mpi_*` for any mpi
  # `PKG_NAME * nompi_*` for no mpi
  string: {{ mpi_prefix }}_h{{ PKG_HASH }}_{{ build }}

  # mpi builds require the right mpi
  # non-mpi builds *do not* appear to require non-mpi builds
  # at least not always

  {% if mpi != 'nompi' %}
  {% set build_pin = mpi_prefix + '_*' %}
  {% else %}
  {% set build_pin = '' %}
  {% endif %}
  run_exports:
    - {{ pin_subpackage('libnetcdf', max_pin='x.x.x') }} {{ build_pin }}

requirements:
  build:
    - {{ compiler('c') }}
    - libtool     # [not win]
    - automake    # [not win]
    - autoconf    # [not win]
  host:
    - {{ mpi }}  # [mpi != 'nompi']
    - bzip2
    - curl
    - zlib
    - hdf4
    # without this repeat reference, conda-smithy doesn't pin correctly
    - hdf5
    - hdf5 * {{ mpi_prefix }}_*
    - jpeg
  run:
    - {{ mpi }}  # [mpi != 'nompi']
    - bzip2
    - curl
    - zlib
    - hdf4
    - hdf5 * {{ mpi_prefix }}_*
    - jpeg

test:
  commands:
    - test -f ${PREFIX}/lib/libnetcdf.a  # [not win]
    - test -f ${PREFIX}/lib/libnetcdf.so  # [not win]
    - nc-config --all  # [not win]

about:
  home: http://www.unidata.ucar.edu/software/netcdf/
  license: MIT
  license_file: COPYRIGHT
  summary: 'Libraries and data formats that support array-oriented scientific data'

extra:
  recipe-maintainers:
    - groutr
    - kmuehlbauer
    - ocefpaf
    - mingwandroid
    - msarahan
    - beckermr
    - xylar
