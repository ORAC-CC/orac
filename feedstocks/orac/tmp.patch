--- a/derived_products/broadband_fluxes/process_broadband_fluxes.F90	2022-07-08 15:01:16.168083404 +0100
+++ b/derived_products/broadband_fluxes/process_broadband_fluxes.F90	2023-01-10 14:17:07.359720815 +0000
@@ -136,7 +136,9 @@
 !    allowing single-layer aerosol retreival in clear sky pixels. Updated
 !    spectral total solar irradiance input file. Included option to calculate
 !    TSI from earth-sun distance relationship and constant TSI at 1 AU if not provided by LUT.
-!
+! 2022/04/28, GT: Added a check for the existence of the "par_weight"
+!    parameter in the TSI dataset, as it is not included/needed in the new NOAA
+!    TSI CDRs.
 ! Bugs:
 ! None known.
 !-------------------------------------------------------------------------------
@@ -592,12 +599,18 @@ subroutine process_broadband_fluxes(Fpri
    call ncdf_read_array(ncid, "tsi_1au", TSI_tsi_1au)
    call ncdf_read_array(ncid, "year", TSI_year)
    call ncdf_read_array(ncid, "jday", TSI_jday)
-   call ncdf_read_array(ncid, "par_weight", TSI_par_weight)
+   ! Check if we have a PAR weights in the TSI file
+   if (nf90_inq_varid(ncid, "par_weight", i) .eq. NF90_NOERR) then
+      call ncdf_read_array(ncid, "par_weight", TSI_par_weight)
+   else
+      TSI_par_weight(:) = 1.0
+   endif
 
    ! Close file
    call ncdf_close(ncid, 'process_broadband_fluxes(FTSI)')
 
    ! Get TSI that coincides with input date
+   pxTSI = 0.0
    do i = 1, nTSI
       if (TSI_year(i) .eq. pxYear .and. TSI_jday(i) .eq. pxJday) &
          pxTSI = TSI_tsi_true_earth(i)
@@ -1105,14 +1118,16 @@ subroutine process_broadband_fluxes(Fpri
    print*, 'y-start = ', pxY0
    print*, 'x-end = ', pxX1
    print*, 'y-end = ', pxY1
-   print*, 'Across Track # = ', pxX1 - pxX0
-   print*, 'Along Track #  = ', pxY1 - pxY0
+   print*, 'Across Track # = ', pxX1 - pxX0 + 2
+   print*, 'Along Track #  = ', pxY1 - pxY0 + 1
 
    ! loop over cross-track dimension
    do i = pxX0, pxX1
       call cpu_time(cpuFinish)
-      print*, 'complete: ', (i-pxX0)*100./((pxX1-pxX0)*1.),'%   i=', i, cpuFinish-cpuStart,' seconds elapsed'
-
+      if (mod(i, 50) .eq. 0) then
+         print*, 'complete: ', (i-pxX0)*100./((pxX1-pxX0+1)*1.), &
+              '%   i=', i, cpuFinish-cpuStart,' seconds elapsed'
+      end if
       ! loop over along-track dimension
       do j = pxY0, pxY1
 
@@ -1203,33 +1218,35 @@ subroutine process_broadband_fluxes(Fpri
             pxHctopID(1)   = tmp_pxHctopID(1)
             pxHcbaseID(1)  = tmp_pxHcbaseID(1)
 
-            if (multi_layer .EQ. 1 .and. cot2(i,j) .gt. 0) then
-               ! ML code has -999. for CTP but CTH exists see correction below
-               if (CTP2(i,j) .LT. 0. .AND. CTH2(i,j) .GT. 0.) then
-                  print*, CTP2(i,j), CTH2(i,j)
-                  print*,(pxP(MINLOC(ABS(CTH2(i,j)-pxZ)))+ &
+            if (multi_layer .EQ. 1) then
+               if (cot2(i,j) .gt. 0) then
+                  ! ML code has -999. for CTP but CTH exists see correction below
+                  if (CTP2(i,j) .LT. 0. .AND. CTH2(i,j) .GT. 0.) then
+                     print*, CTP2(i,j), CTH2(i,j)
+                     print*,(pxP(MINLOC(ABS(CTH2(i,j)-pxZ)))+ &
                           pxP(MINLOC(ABS(CTH2(i,j)-pxZ))+1))/2.
-                  ! poor man's interpolation method but gets close...
-                  tmpVal = (pxP( MINLOC(ABS(CTH2(i,j)-pxZ)) )+ &
-                            pxP( MINLOC(ABS(CTH2(i,j)-pxZ))+1))/2.
-                  CTP2(i,j) = tmpVal(1)
-               end if
+                     ! poor man's interpolation method but gets close...
+                     tmpVal = (pxP( MINLOC(ABS(CTH2(i,j)-pxZ)) )+ &
+                          pxP( MINLOC(ABS(CTH2(i,j)-pxZ))+1))/2.
+                     CTP2(i,j) = tmpVal(1)
+                  end if
 
-               ml_flag = 2
-               call preprocess_input(cc_tot2(i,j), AREF(i,j), AOD550(i,j), phase(i,j),&
+                  ml_flag = 2
+                  call preprocess_input(cc_tot2(i,j), AREF(i,j), AOD550(i,j), phase(i,j),&
                        CTT2(i,j), CTP2(i,j), REF2(i,j), COT2(i,j), CTH2(i,j), InfThnCld,&
                        NLS, pxZ, tmp_pxREF, tmp_pxCOT, tmp_pxHctop, tmp_pxHcbase,&
                        tmp_pxPhaseFlag, pxLayerType,&
                        pxregime, tmp_pxHctopID, tmp_pxHcbaseID)
 
-               pxREF(2)       = tmp_pxREF
-               pxCOT(2)       = tmp_pxCOT
-               pxHctop(2)     = tmp_pxHctop
-               pxHcbase(2)    = tmp_pxHcbase
-               pxPhaseFlag(2) = tmp_pxPhaseFlag
-               pxHctopID(2)   = tmp_pxHctopID(1)
-               pxHcbaseID(2)  = tmp_pxHcbaseID(1)
-               pxregime = 7
+                  pxREF(2)       = tmp_pxREF
+                  pxCOT(2)       = tmp_pxCOT
+                  pxHctop(2)     = tmp_pxHctop
+                  pxHcbase(2)    = tmp_pxHcbase
+                  pxPhaseFlag(2) = tmp_pxPhaseFlag
+                  pxHctopID(2)   = tmp_pxHctopID(1)
+                  pxHcbaseID(2)  = tmp_pxHcbaseID(1)
+                  pxregime = 7
+               end if
             end if
 
             if (pxregime .eq. 4) ml_flag = 0
